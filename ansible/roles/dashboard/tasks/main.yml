---
# Sets up a production version of Dashboard
- name: Create directory for Dashboard web application
  file: path='{{ dashboard_path }}' state=directory mode=2755

- name: Download release
  get_url:
    url: https://github.com/City-of-Bloomington/dashboard/releases/download/{{ dashboard_version }}/dashboard-{{ dashboard_version }}.tar.gz
    dest: "{{ dashboard_install_dir }}/dashboard-{{ dashboard_version }}.tar.gz"
  register: release

- name: Extract release
  command: tar xzvf dashboard-{{ dashboard_version }}.tar.gz
  args:
    chdir: "{{ dashboard_install_dir }}"
  when: release.changed

- name: Install release
  command: rsync -rlv {{ dashboard_install_dir }}/dashboard-{{ dashboard_version }}/ {{ dashboard_path }}/
  notify: dashboard update permissions
  when: release.changed

- name: check if dashboard apache config already exists
  stat: path=/etc/apache2/sites-available/{{ dashboard_name }}.conf
  register: original

# check if backup of dashboard_apache_config exists
# if it already exists, we won't move it again
- name: check if dashboard apached config backup already exists
  stat: path=/etc/apache2/sites-available/{{ dashboard_name }}.bak
  register: backup

#note that "copy" command in ansible copies from ansible client to host
#one machine to the other
#here we just want to do the copy only on the host
- name: Make a backup copy of dashboard apache config file
  shell: cp /etc/apache2/sites-available/{{ dashboard_name }}.conf /etc/apache2/sites-available/{{ dashboard_name }}.bak
  when: original.stat.exists and not backup.stat.exists

- name: Create an apache config file for dashboard site based on template
  template: src=dashboard.conf dest=/etc/apache2/sites-available/{{ dashboard_name }}.conf
  notify:
    - restart apache
  tags: dashboard

- name: a2ensite dashboard
  command: a2ensite dashboard
  notify:
    - restart apache

- name: configure dashboard application
  template: src=site_config.inc dest={{ dashboard_path }}/data/
  notify: dashboard update permissions
  tags: dashboard

- name: configure COB Theme
  template: src=theme_config.inc dest={{ dashboard_path }}/data/Themes/COB
  notify: dashboard update permissions
  tags: dashboard

- name: Create database for Dashboard
  mysql_db: name={{ dashboard_db.name }} state=present config_file=/etc/mysql/debian.cnf
  register: db

- name: Initialize database
  mysql_db:
    state: import
    name: "{{ dashboard_db.name }}"
    target: "{{ dashboard_path }}/scripts/mysql.sql"
    config_file: /etc/mysql/debian.cnf
  when: db.changed

- name: Create database user for Dashboard
  mysql_user:
    name: "{{ dashboard_db.username }}"
    password: "{{ dashboard_db.password }}"
    priv: "{{ dashboard_db.name }}.*:ALL"
    state: present
    config_file: /etc/mysql/debian.cnf

- name: update createPerson script
  template: src=createPerson.php dest={{ dashboard_path }}/scripts/
  notify: dashboard update permissions
  tags: dashboard

- name: Create first user!
  shell: php createPerson.php
  args:
    chdir: "{{ dashboard_path }}/scripts"
  when: db.changed
